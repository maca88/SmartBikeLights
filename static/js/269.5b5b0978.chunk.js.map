{"version":3,"file":"static/js/269.5b5b0978.chunk.js","mappings":"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","sources":["components/WidgetConfiguration.js"],"sourcesContent":["import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { action } from 'mobx';\r\nimport Grid from '@mui/material/Grid';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { headlightList, taillightList, getDeviceLights } from '../constants';\r\nimport { getDevice, deviceList } from '../widgetConstants';\r\nimport AppSelect from '../inputs/AppSelect';\r\nimport LightConfiguration from './LightConfiguration';\r\nimport ConfigurationResult from './ConfigurationResult';\r\nimport IndividualLightNetwork from './IndividualLightNetwork';\r\nimport ParseConfiguration from './ParseConfiguration';\r\n\r\nconst Root = styled('div')(({ theme }) => ({\r\n  [`& .MuiCardHeader-root`]: {\r\n    backgroundColor:\r\n      theme.palette.mode === 'light'\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[700]\r\n  },\r\n\r\n  [`& .MuiCardHeader-root .ElementWithHelp-root`]: {\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  [`& .MuiCard-root`]: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default observer(({ configuration, setConfiguration }) => {\r\n  const device = getDevice(configuration.device);\r\n  const setNewDevice = action((newDevice) => {\r\n    configuration.setDevice(newDevice);\r\n  });\r\n  const setNewConfiguration = action((newConfiguration) => {\r\n    setConfiguration(newConfiguration);\r\n  });\r\n\r\n  return (\r\n    <Root>\r\n      <ParseConfiguration setConfiguration={setNewConfiguration} deviceList={deviceList} />\r\n      <Grid container spacing={2} sx={{ marginBottom: 2 }} justifyContent=\"center\">\r\n        <Grid item xs={12} sm={12}>\r\n          <AppSelect required items={deviceList} label=\"Garmin device\" setter={setNewDevice} value={configuration.device} />\r\n        </Grid>\r\n      </Grid>\r\n      <IndividualLightNetwork device={device} configuration={configuration} />\r\n      { device ? (\r\n        <React.Fragment>\r\n          <LightConfiguration\r\n            useIndividualNetwork={configuration.useIndividualNetwork}\r\n            device={device}\r\n            totalLights={configuration.getTotalLights()}\r\n            lightType=\"Headlight\"\r\n            lightList={getDeviceLights(device, headlightList, configuration.useIndividualNetwork)}\r\n            light={configuration.headlight}\r\n            setLight={configuration.setHeadlight}\r\n            setLightModes={configuration.setHeadlightModes}\r\n            setAdditionalLightModes={configuration.setHeadlightAdditionalModes}\r\n            lightPanel={configuration.headlightPanel}\r\n            setLightPanel={configuration.setHeadlightPanel}\r\n            lightSettings={configuration.headlightSettings}\r\n            setLightSettings={configuration.setHeadlightSettings}\r\n            deviceNumber={configuration.headlightDeviceNumber}\r\n            setDeviceNumber={configuration.setHeadlightDeviceNumber}\r\n            serialNumber={configuration.headlightSerialNumber}\r\n            setSerialNumber={configuration.setHeadlightSerialNumber}\r\n            lightIconColor={configuration.headlightIconColor}\r\n            setLightIconColor={configuration.setHeadlightIconColor}\r\n          />\r\n          <LightConfiguration\r\n            useIndividualNetwork={configuration.useIndividualNetwork}\r\n            device={device}\r\n            totalLights={configuration.getTotalLights()}\r\n            lightType=\"Taillight\"\r\n            lightList={getDeviceLights(device, taillightList, configuration.useIndividualNetwork)}\r\n            light={configuration.taillight}\r\n            setLight={configuration.setTaillight}\r\n            setLightModes={configuration.setTaillightModes}\r\n            setAdditionalLightModes={configuration.setTaillightAdditionalModes}\r\n            lightPanel={configuration.taillightPanel}\r\n            setLightPanel={configuration.setTaillightPanel}\r\n            lightSettings={configuration.taillightSettings}\r\n            setLightSettings={configuration.setTaillightSettings}\r\n            deviceNumber={configuration.taillightDeviceNumber}\r\n            setDeviceNumber={configuration.setTaillightDeviceNumber}\r\n            serialNumber={configuration.taillightSerialNumber}\r\n            setSerialNumber={configuration.setTaillightSerialNumber}\r\n            lightIconColor={configuration.taillightIconColor}\r\n            setLightIconColor={configuration.setTaillightIconColor}\r\n          />\r\n          <ConfigurationResult\r\n            configuration={configuration}\r\n            deviceList={deviceList}\r\n          />\r\n        </React.Fragment>\r\n      ) : null }\r\n    </Root>\r\n  );\r\n});\r\n"],"names":["Root","styled","_ref","theme","backgroundColor","palette","mode","grey","justifyContent","marginTop","spacing","observer","_ref2","configuration","setConfiguration","device","getDevice","setNewDevice","action","newDevice","setDevice","setNewConfiguration","newConfiguration","_jsxs","children","_jsx","ParseConfiguration","deviceList","Grid","container","sx","marginBottom","item","xs","sm","AppSelect","required","items","label","setter","value","IndividualLightNetwork","React","LightConfiguration","useIndividualNetwork","totalLights","getTotalLights","lightType","lightList","getDeviceLights","headlightList","light","headlight","setLight","setHeadlight","setLightModes","setHeadlightModes","setAdditionalLightModes","setHeadlightAdditionalModes","lightPanel","headlightPanel","setLightPanel","setHeadlightPanel","lightSettings","headlightSettings","setLightSettings","setHeadlightSettings","deviceNumber","headlightDeviceNumber","setDeviceNumber","setHeadlightDeviceNumber","serialNumber","headlightSerialNumber","setSerialNumber","setHeadlightSerialNumber","lightIconColor","headlightIconColor","setLightIconColor","setHeadlightIconColor","taillightList","taillight","setTaillight","setTaillightModes","setTaillightAdditionalModes","taillightPanel","setTaillightPanel","taillightSettings","setTaillightSettings","taillightDeviceNumber","setTaillightDeviceNumber","taillightSerialNumber","setTaillightSerialNumber","taillightIconColor","setTaillightIconColor","ConfigurationResult"],"sourceRoot":""}